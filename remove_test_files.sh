#!/bin/bash
# DinoAir Test Files Removal Script
# Generated automatically - removes all archived test files

set -e

echo "üóëÔ∏è  Removing test files from DinoAir repository..."
echo "‚ö†Ô∏è  This will permanently delete test files. Make sure you have the archive!"
echo ""

# Confirm before proceeding
read -p "Are you sure you want to remove all test files? (yes/no): " confirm
if [ "$confirm" != "yes" ]; then
    echo "‚ùå Aborted"
    exit 1
fi

echo "Removing test files..."

rm -f "API_files/pytest.ini"
rm -f "API_files/tests/conftest.py"
rm -f "API_files/tests/test_app_smoke.py"
rm -f "API_files/tests/test_endpoints.py"
rm -f "API_files/tests/test_input_processing_pipeline.py"
rm -f "API_files/tests/test_input_processing_watchdog_and_strict.py"
rm -f "API_files/tests/test_rag_endpoints.py"
rm -f "config/test_config.py"
rm -f "database/tests/__init__.py"
rm -f "database/tests/conftest.py"
rm -f "database/tests/pytest.ini"
rm -f "database/tests/test_appointments_db.py"
rm -f "database/tests/test_artifacts_db.py"
rm -f "database/tests/test_database_manager_integration.py"
rm -f "database/tests/test_file_search_db.py"
rm -f "database/tests/test_initialize_db.py"
rm -f "database/tests/test_initialize_db_comprehensive.py"
rm -f "database/tests/test_migration_loader.py"
rm -f "database/tests/test_migration_simple.py"
rm -f "database/tests/test_migrations.py"
rm -f "database/tests/test_migrations_integration.py"
rm -f "database/tests/test_notes_database_compat.py"
rm -f "database/tests/test_notes_repository_real.py"
rm -f "database/tests/test_notes_repository_schema_and_search.py"
rm -f "database/tests/test_notes_security_unit.py"
rm -f "database/tests/test_notes_service_integration_real.py"
rm -f "database/tests/test_notes_service_unit.py"
rm -f "database/tests/test_notes_system.py"
rm -f "database/tests/test_notes_validator_unit.py"
rm -f "database/tests/test_projects_db.py"
rm -f "database/tests/test_resilient_db.py"
rm -f "database/tests/test_schema_indexes.py"
rm -f "database/tests/test_timers_db.py"
rm -f "models/tests/test_note_model.py"
rm -f "models/tests/test_project_and_calendar_event.py"
rm -f "mypy_test.ini"
rm -f "pytest.ini"
rm -f "red_team_testing.py"
rm -f "scripts/test_automation.py"
rm -f "tests/connection.spec.ts"
rm -f "tests/diagnostics.spec.ts"
rm -f "tools/pseudocode_translator/run_tests.py"
rm -f "tools/pseudocode_translator/tests/conftest.py"
rm -f "tools/pseudocode_translator/tests/fixtures/__init__.py"
rm -f "tools/pseudocode_translator/tests/fixtures/configs/invalid_config.yaml"
rm -f "tools/pseudocode_translator/tests/fixtures/configs/valid_config.yaml"
rm -f "tools/pseudocode_translator/tests/fixtures/error_cases/runtime_errors.txt"
rm -f "tools/pseudocode_translator/tests/fixtures/error_cases/syntax_errors.txt"
rm -f "tools/pseudocode_translator/tests/fixtures/expected_output/basic_examples_output.py"
rm -f "tools/pseudocode_translator/tests/fixtures/pseudocode/advanced_examples.txt"
rm -f "tools/pseudocode_translator/tests/fixtures/pseudocode/basic_examples.txt"
rm -f "tools/pseudocode_translator/tests/test_adaptive_chunking.py"
rm -f "tools/pseudocode_translator/tests/test_assembler_basic.py"
rm -f "tools/pseudocode_translator/tests/test_backpressure.py"
rm -f "tools/pseudocode_translator/tests/test_cache_eviction.py"
rm -f "tools/pseudocode_translator/tests/test_config_validate.py"
rm -f "tools/pseudocode_translator/tests/test_deprecation_warning.py"
rm -f "tools/pseudocode_translator/tests/test_events_emission.py"
rm -f "tools/pseudocode_translator/tests/test_model_selection.py"
rm -f "tools/pseudocode_translator/tests/test_new_abstractions.py"
rm -f "tools/pseudocode_translator/tests/test_parser_basic.py"
rm -f "tools/pseudocode_translator/tests/test_process_pool.py"
rm -f "tools/pseudocode_translator/tests/test_stream_characterization.py"
rm -f "tools/pseudocode_translator/tests/test_streaming_smoke.py"
rm -f "tools/pseudocode_translator/tests/test_translation_invoker.py"
rm -f "tools/pseudocode_translator/tests/test_translator_mock.py"
rm -f "tools/pseudocode_translator/tests/test_validator_basics.py"
rm -f "tools/tests/__init__.py"
rm -f "tools/tests/conftest.py"
rm -f "tools/tests/helpers/__init__.py"
rm -f "tools/tests/helpers/db_stubs.py"
rm -f "tools/tests/helpers/patching.py"
rm -f "tools/tests/test_basic_tools_refactor.py"
rm -f "tools/tests/test_file_search_tool_refactor.py"
rm -f "tools/tests/test_notes_tool_refactor.py"
rm -f "tools/tests/test_patching_hooks.py"
rm -f "tools/tests/test_projects_tool_refactor.py"
rm -f "tools/tests/test_tool_runtime_smoke.py"
rm -f "tools/tests/test_tool_setup.py"
rm -f "tools/tests/test_undefined_names.py"
rm -f "utils/pytest.ini"
rm -f "utils/run_tests.py"
rm -f "utils/tests/README.md"
rm -f "utils/tests/__init__.py"
rm -f "utils/tests/test_appointments.py"
rm -f "utils/tests/test_artifact_encryption.py"
rm -f "utils/tests/test_colors.py"
rm -f "utils/tests/test_config_loader.py"
rm -f "utils/tests/test_dependency_container.py"
rm -f "utils/tests/test_dinoair_api.py"
rm -f "utils/tests/test_enhanced_logger.py"
rm -f "utils/tests/test_enhanced_security.py"
rm -f "utils/tests/test_enums.py"
rm -f "utils/tests/test_error_handling.py"
rm -f "utils/tests/test_health_checker.py"
rm -f "utils/tests/test_log_sanitizer.py"
rm -f "utils/tests/test_logger.py"
rm -f "utils/tests/test_optimization_utils.py"
rm -f "utils/tests/test_performance_monitor.py"
rm -f "utils/tests/test_process.py"
rm -f "utils/tests/test_resource_manager.py"
rm -f "utils/tests/test_runner.py"
rm -f "utils/tests/test_safe_expr.py"
rm -f "utils/tests/test_safe_pdf_extractor.py"
rm -f "utils/tests/test_safe_pdf_extractor_fuzz.py"
rm -f "utils/tests/test_scaling.py"
rm -f "utils/tests/test_sql.py"
rm -f "utils/tests/test_state_machine.py"
rm -f "utils/tests/test_window_state.py"

# Remove test directories
rm -rf "tools/pseudocode_translator/tests/fixtures/expected_output"
rm -rf "tools/pseudocode_translator/tests/fixtures/error_cases"
rm -rf "tools/pseudocode_translator/tests/fixtures/pseudocode"
rm -rf "tools/pseudocode_translator/tests/fixtures/configs"
rm -rf "tools/pseudocode_translator/tests/fixtures"
rm -rf "tools/tests/helpers"

echo "‚úÖ Test files removed successfully"
echo "üìä Summary:"
echo "   - Removed test directories and files"
echo "   - Repository size reduced"
echo ""
echo "Next steps:"
echo "1. Review the changes: git status"
echo "2. Commit the removal: git add -A && git commit -m 'Remove test files (archived)'"
echo "3. Push changes: git push"
